pipeline { 
    environment { 
        registry = "wahaj123/python" 
        registryCredential = 'dockerhub' 
        dockerImage = 'wahaj123/python' 
    }
    agent any 
    stages { 
        stage('Cloning Code Repo') { 
            steps { 
                dir("code") { 
                    git branch: 'main', 
                    credentialsId: 'github_ssh', 
                    url: 'git@github.com:wahaj123/flask_kubernetes.git'
                }
            }
        }

        stage('Cloning Kubernetes Repo') { 
            steps { 
                dir("kubernetes") { 
                    git branch: 'main', 
                    credentialsId: 'github_ssh', 
                    url: 'git@github.com:wahaj123/Kubernetes_app.git'
                }
            }
        }

        stage('Liniting Dockerfile') {
            steps {
                sh 'cd code && docker run --rm -i -v ${PWD}/.hadolint.yml:/.hadolint.yaml hadolint/hadolint < Dockerfile'
            }
        }

        stage('Building our image') { 
            steps {
                script {
                    dockerImage = docker.build (registry + ":$BUILD_NUMBER", "./code") 
                }           
            }
        }
        
        stage ('Docker Scan'){
            steps{
                script{
                    sh 'trivy image $registry:$BUILD_NUMBER'
                }
            }
        }

        stage('Deploy our image') { 
            steps { 
                script { 
                    docker.withRegistry( '', registryCredential ) { 
                        dockerImage.push() 
                    }
                } 
            }
        }

        stage('Changing tag') { 
            steps { 
                sh "cd kubernetes/kubernetes && kustomize edit set image $registry:$BUILD_NUMBER" 
            }
        }

        stage('Pushing to Github') { 
            steps { 
                sshagent(['github_ssh']) {
                    sh "cd kubernetes && git commit -am 'Publish new version' && git push || echo 'no changes'"
                    sh "cd kubernetes && git push"
                }
            }
        }

        stage('Cleaning up') { 
            steps { 
                sh "docker rmi $registry:$BUILD_NUMBER" 
            }
        } 
    }
}